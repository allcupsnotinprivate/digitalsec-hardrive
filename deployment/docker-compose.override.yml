version: "3.8"

services:

  router-service:
    build:
      context: ../
      dockerfile: deployment/Dockerfile
    depends_on:
      - database
      - redis
      - s3
    container_name: router_service
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '0.1'
          memory: 512M
    environment:
      - DIGITALSEC__EXTERNAL__POSTGRES__HOST=database
      - DIGITALSEC__EXTERNAL__REDIS__HOST=redis
      - DIGITALSEC__EXTERNAL__S3__HOST=s3
    env_file:
      - ../.dev.env

  database:
    image: pgvector/pgvector:pg17
    container_name: database
    restart: on-failure
    shm_size: "1g"
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 2G
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres -h database" ]
      interval: 3s
      timeout: 3s
      retries: 10
    environment:
      - POSTGRES_USER=digitalsec_username
      - POSTGRES_PASSWORD=digitalsec_password
      - POSTGRES_DB=digitalsec
    volumes:
      - database_data:/var/lib/postgresql/data
      - ./init-scripts:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    restart: on-failure
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 256M
    command: >
      redis-server
      --requirepass digitalsec_password
      --appendonly yes
      --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data

  s3:
    image: minio/minio:RELEASE.2025-07-23T15-54-02Z-cpuv1
    container_name: s3
    restart: on-failure
    command: server /data --console-address ":9001"
    environment:
      - MINIO_ROOT_USER=digitalsec
      - MINIO_ROOT_PASSWORD=digitalsec_password
    ports:
      - "9000:9000"
      - "9001:9001"
    volumes:
      - s3_data:/data

volumes:
  database_data:
    driver: local
  redis_data:
    driver: local
  s3_data:
    driver: local